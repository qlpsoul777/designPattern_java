适配器(Adapter)模式：
1. 概述
　　将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作。

2. 解决的问题
　　即Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作。

3. 模式中的角色
　　3.1 目标接口（Target）：客户所期待的接口。目标可以是具体的或抽象的类，也可以是接口。
　　3.2 需要适配的类（Adaptee）：需要适配的类或适配者类。
　　3.3 适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口

4.适配器模式有2种，第一种是“面向类的适配器模式”，第二种是“面向对象的适配器模式”。

5.两种模式分析
   1.类的适配模式用于单一源的适配，由于它的源的单一话，代码实现不用写选择逻辑，很清晰；而对象的适配模式则可用于多源的适配，
  弥补了类适配模式的不足，使得原本用类适配模式需要写很多适配器的情况不复存在，弱点是，由于源的数目可以较多，所以具体的实现
  条件选择分支比较多，不太清晰。
   2.适配器模式主要用于几种情况：
          （1）系统需要使用现有的类，但现有的类不完全符合需要。
          （2）讲彼此没有太大关联的类引进来一起完成某项工作（指对象适配）。
          
6.默认适配器模式：这种模式的核心归结如下：当你想实现一个接口但又不想实现所有接口方法，只想去实现一部分方法时，就用中默认的
  适配器模式，他的方法是在接口和具体实现类中添加一个抽象类，而用抽象类去空实现目标接口的所有方法。而具体的实现类只需要覆盖其
  需要完成的方法即可。

